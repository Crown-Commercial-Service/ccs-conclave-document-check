dist: bionic
language: ruby
rvm:
- 2.7.3
services:
- postgresql
- redis-server
addons:
  postgresql: '10'
  apt:
    packages:
    - postgresql-10
    - postgresql-client-10
cache:
  - bundler
env:
  global:
  - CF_ORG=ccs-document-upload
  - secure: "P+aGJDjWLTGwUxaUvoR2vPvLGUlsFihToCYHIvEE1G4LXbneip9tIW5t4Y2pkcVi2CH9npx5dAXgpi15KXitakRydhc0EPCmpcuSb+mOiR1Q2pSfATlfnXfASDxGR9aj/J8EOgc0yZ3CXH/XV4IZyCqpYpELd6fvU2cyinisJy5/HcPNx92I+Pt6RMAna6Ljzgle5ZwaWBMeYuErN+TXuBKz7oEQeBzriXPTZj9opvVLQU2eAASEoDinQdQ5Q3epmGcabox4NXsemRERs66R1buW+Db0Hqhy+n1byfh9usStDlDZY/33zRI+kshBtLsXdRka31bR1sKxIT3+NibypxnO126prgBqpeBJym1RdPKcF7+nYjI4Eq617NLFCE+sQFF1pxpaDLeZMDU+i43C67+e4AO5DCFpBbwfaWvNtr0MduZw6rljgdc4BkrMscIOBtK12EaXZFRZD1Q/Hv2gqRb4eCGEH4x0u8NZ5H4Ql3fgxrV1sy/Ua2w0v1pkvyA2eWkmj9LRy5NvlhWV4mXl5JAYsrJOSJiaDVRmbV/J8Ll4vcyKGOy3tgNjD8ROWfdyIYv1HTvNR3d/vd5tW3xJnY7rZ1WRePq/9rb+2E2bhb/NCfSrK0cKkRZgAQIbzbMy+ofU+vCE0O2JObvRlv0XaMGL6A3+bf2c1mpD/9raMAI="
before_install:
  - gem install bundler -v 2.1.4
install:
  - bundle install --jobs=3 --retry=3
before_script:
  - psql -c 'create database ccs_conclave_document_upload_test;' -U postgres
  - bundle exec rake db:schema:load
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter before-build
before_deploy:
  - echo "install cloudfoundry cli"
  - wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
  - echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
  - sudo apt-get update -qq
  - sudo apt-get install cf7-cli
deploy:
  - provider: script
    script: bash CF/deploy-app.sh -u $CF_USER -o $CF_ORG -p $CF_PASS -s sandbox
    on:
      branch: sandbox
  - provider: script
    script: bash CF/deploy-app.sh -u $CF_USER -o $CF_ORG -p $CF_PASS -s development
    on:
      branch: develop
  - provider: script
    script: bash CF/deploy-app.sh -u $CF_USER -o $CF_ORG -p $CF_PASS -s pre-production
    on:
      branch: preprod
  - provider: script
    script: bash CF/deploy-app.sh -u $CF_USER -o $CF_ORG -p $CF_PASS -s production
    on:
      branch: main
after_script:
  - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT